namespace YYCC {
/**

\page platform_checker Platform Checker

In many cross platform applications, 
programmer usually write code adapted to different platforms in one source file 
and enable them respectively by macros representing the target platform.
As a cross platform library,
YYCC also has this feature and you can utilize it if you don't have other ways to so the same things.

\section platform_checker__values Values

YYCC always define a macro called \c YYCC_OS to indicate the system of target platform.
In implementation, it will check following list from top to bottom to set matched value for it.

\li \c YYCC_OS_WINDOWS: Windows environment. It is done by checking whether environment define \c _WIN32 macro.
\li \c YYCC_OS_LINUX: In current implementation, this means target platform is \b NOT Windows.

\section platform_checker__usage Usage

Now you know any possible value of \c YYCC_OS.
The next step is how to use it to enable specified code in specific target platform.
We take Windows platform for example.
Assume \c blabla() function is Windows specific.
We have following example code:

\code
#if YYCC_OS == YYCC_OS_WINDOWS
blabla();
#endif
\endcode

It's enough and simple that use \c \#if to bracket the Windows specified code.

*/
}